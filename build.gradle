/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
//apply plugin: 'java-library'
apply{
    plugin 'java'
    plugin 'eclipse-wtp'
    plugin 'maven'
    plugin 'war'
    plugin 'com.bmuschko.tomcat'
}

group='com.github.JhonnyBravo'
sourceCompatibility=1.8
targetCompatibility=1.8

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
    maven{ url 'https://jitpack.io'}
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    //api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    //implementation 'com.google.guava:guava:23.0'

    // Use JUnit test framework
    //testImplementation 'junit:junit:4.12'
    testCompile 'junit:junit:4.12'

    def tomcatVersion='8.0.52'

    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
           "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}",
           "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"

    compile fileTree(dir: "WebContent/WEB-INF/lib", include: '*.jar')
    compile "org.apache.tomcat:tomcat-servlet-api:${tomcatVersion}"
    compile "org.apache.tomcat:tomcat-jsp-api:${tomcatVersion}"

    compile 'com.github.JhonnyBravo:mysql-resource:master-SNAPSHOT'
}

task sourcesJar(type: Jar,dependsOn: classes){
    classifier='sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar,dependsOn: javadoc){
    classifier='javadoc'
    from javadoc.destinationDir
}

artifacts{
    archives sourcesJar
    archives javadocJar
}

javadoc{
    options.charSet='UTF-8'
    options.encoding='UTF-8'
}

tasks.withType(JavaCompile){
    options.encoding='UTF-8'
}

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "com.bmuschko:gradle-tomcat-plugin:2.5"
    }
}

project.webAppDirName = 'WebContent'

sourceSets {
    main {
        java {
            srcDir 'src'
        }

        resources {
            srcDir 'src'
        }
    }
}

war {
    exclude 'WEB-INF/lib/**'
    exclude 'WEB-INF/classes/**'
}
