buildscript {
    ext {
        springBootVersion = '2.4.5'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply {
    plugin 'java'
    plugin 'eclipse'
    plugin 'org.springframework.boot'
    plugin 'io.spring.dependency-management'
    plugin 'maven-publish'
    plugin 'war'
    plugin 'checkstyle'
    plugin 'pmd'
}

group = 'com.github.JhonnyBravo'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
    mavenCentral()
    maven{ url 'https://jitpack.io'}
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-thymeleaf')
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-validation')
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    runtimeOnly 'mysql:mysql-connector-java'
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation ('junit:junit:4.13.2')
}

task sourcesJar(type: Jar,dependsOn: classes){
    classifier='sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar,dependsOn: javadoc){
    classifier='javadoc'
    from javadoc.destinationDir
}

artifacts{
    archives sourcesJar
    archives javadocJar
}

javadoc{
    options.charSet='UTF-8'
    options.encoding='UTF-8'
}

checkstyle {
    toolVersion='8.41.1'
}

pmd {
    toolVersion='6.33.0'
    ignoreFailures=true
    ruleSetFiles=files("config/pmd/custom-java.xml")
    ruleSets=[]
}

tasks.withType(JavaCompile){
    options.encoding='UTF-8'
}
